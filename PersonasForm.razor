@page "/personas/nueva"
@page "/personas/editar/{Id:int}"
@rendermode InteractiveServer
@inject NavigationManager _navigator;
@inject IRepositorioPersonas _repositorio;
<h2>@_mensaje Persona</h2>
<EditForm Model="_persona" FormName="frmPersona" OnValidSubmit="Guardar">

    <DataAnnotationsValidator />
    <div class="row mb-3">
        <label for="txtNombre" class="col-2 col-form-label">Nombre</label>
        <div class="col-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="_persona.Nombre" />
            <ValidationMessage For="()=>_persona.Nombre" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtCorreo" class="col-2 col-form-label">Correo</label>
        <div class="col-10">
            <InputText id="txtCorreo" class="form-control" @bind-Value="_persona.Correo" />
            <ValidationMessage For="()=>_persona.Correo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtTelefono" class="col-2 col-form-label">Tel√©fono</label>
        <div class="col-10">
            <InputText id="txtTelefono" class="form-control" @bind-Value="_persona.Telefono" />
            <ValidationMessage For="()=>_persona.Telefono" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtEdad" class="col-2 col-form-label">Edad</label>
        <div class="col-10">
            <InputText id="txtEdad" class="form-control" @bind-Value="_persona.Edad" />
            <ValidationMessage For="()=>_persona.Edad" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtSexo" class="col-2 col-form-label">Sexo</label>
        <div class="col-10">
            <InputText id="txtSexo" class="form-control" @bind-Value="_persona.Sexo" />
            <ValidationMessage For="()=>_persona.Sexo" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtVisual" class="col-2 col-form-label">Visualizaciones</label>
        <div class="col-10">
            <select id="txtVisual" class="form-control" @bind-Value="_persona.VisualId">
                <option value="0" disabled="disabled">Seleccione visual...</option>
                @foreach (Visual visual in _visualizaciones)
                {
                    <option value="@visual.Id">@visual.Nombre</option>
                }
            </select>
            <ValidationMessage For="()=>_persona.VisualId" />
        </div>
    </div>
    <div class="row mb-3">
        <label for="txtContenidos" class="col-2 col-form-label">Contenidos</label>
        <div class="col-10">
            <InputSelect class="form-select" @bind-Value="_contenidosSeleccionados" multiple size="3">
                @foreach (Contenido contenido in _contenidos)
                {
                    <option value="@contenido.Id">@contenido.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
    <button class="btn btn-danger ms-3" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string _mensaje = "";
    private Persona? _persona = new();
    private List<Visual> _visualizaciones = new();
    private List<Contenido> _contenidos = new();
    private int[] _contenidosSeleccionados = new int[] { };

    protected override async Task OnInitializedAsync()
    {
        _visualizaciones = await _repositorio.GetVisual();
        _contenidos = await _repositorio.GetContenido();
        if (Id > 0)
        {
            _persona = await _repositorio.Get(Id);
            if (_persona.Contenidos != null && _persona.Contenidos.Count != 0)
            {
                _contenidosSeleccionados = _persona.Contenidos.Select(i => i.Id).ToArray();
            }
            _mensaje = "Modificar";
        }
        else
        {
            _mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (_contenidosSeleccionados.Length > 0)
        {
            List<Contenido> contenidos = new();
            foreach (int idContenido in _contenidosSeleccionados)
            {
                contenidos.Add(_contenidos.First(r => r.Id == idContenido));
            }
            _persona.Contenidos = contenidos;
        }
        else
        {
            _persona.Contenidos = new List<Contenido>();
        }
        if (Id > 0)
        {
            await _repositorio.Update(Id, _persona!);
        }
        else
        {
            await _repositorio.Add(_persona!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        _navigator.NavigateTo("/personas");
    }
}
